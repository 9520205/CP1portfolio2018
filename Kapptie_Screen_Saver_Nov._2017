KSS TAB:

Lines myLines1;
Lines myLines2;
Lines[] myLines;

void setup() {
  background(random(200, 255));
  size(displayWidth, displayHeight);
  frameRate(15);
  myLines = new Lines[100];
  for (int i=0; i<myLines.length; i++) {
    myLines[i] = new Lines(random(width), random(height), random(1, 5), random(10, 30));
  }
} 
void draw() {
  if (frameCount > 500) {
    background(random(200, 255));
    frameCount = 0;
  } else {
    for (int i=0; i< myLines.length; i++) {
      myLines[i].display();
    }
  }
}



LINES TAB:

class Lines {
  float xpos;
  float ypos;
  float strokeW;
  float pointCount;

  Lines(float tempX, float tempY, float tempStroke, float tempLength) {
    xpos = tempX;
    ypos = tempY;
    strokeW = tempStroke;
    pointCount = tempLength;
  }

  void display() {
    strokeWeight(strokeW);
    stroke(random(255), random(255), random(255));
    if (xpos > width || xpos < 0 || ypos > height || ypos < 0) {
      xpos = random(width);
      ypos = random(height);
    } else {
      if (random(100) > 90) {
        moveLeft(xpos, ypos, pointCount);
      } else if (random(100) > 80) {
        moveUp(xpos, ypos, pointCount);
      } else if (random(100) < 70) {
        moveDown(xpos, ypos, pointCount);
      } else {
        moveRight(xpos, ypos, pointCount);
      }
    }
  }
  void moveRight(float startX, float startY, float pointCount) {
    for (float i=0; i < pointCount; i++) {
      point(startX+i, startY);
      xpos = startX+i;
      ypos = startY;
    }
  }

  void moveDown(float startX, float startY, float pointCount) {
    for (float i=0; i < pointCount; i++) {
      point(startX, startY+i);
      xpos = startX;
      ypos = startY+i;
    }
  }

  void moveLeft(float startX, float startY, float pointCount) {
    for (float i=0; i < pointCount; i++) {
      point(startX-i, startY);
      xpos = startX-i;
      ypos = startY;
    }
  }

  void moveUp(float startX, float startY, float pointCount) {
    for (float i=0; i < pointCount; i++) {
      point(startX, startY-i);
      xpos = startX;
      ypos = startY-i;
    }
  }
}
