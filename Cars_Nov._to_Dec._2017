CARS

TAB 1:

Car redCar;
Car orgCar;
Car yelCar;
Car grnCar;
Car bluCar;
Car purCar;

void setup () {
  size(200,200);
  redCar = new Car(color(255,0,0),0,10,5.5);
  orgCar = new Car(color(255,127,0),0,40,5.6);
  yelCar = new Car(color(255,232,0),0,70,5.7);
  grnCar = new Car(color(0,200,0),0,100,5.8);
  bluCar = new Car(color(50,50,255),0,130,5.9);
  purCar = new Car(color(175,0,255),0,160,6);
}

void draw() {
  background(60);
  redCar.drive();
  redCar.display();
  orgCar.drive();
  orgCar.display();
  yelCar.drive();
  yelCar.display();
  grnCar.drive();
  grnCar.display();
  bluCar.drive();
  bluCar.display();
  purCar.drive();
  purCar.display();
  stroke(255,232,0);
  line(0,25,200,25);
  line(0,55,200,55);
  line(0,85,200,85);
  line(0,115,200,115);
  line(0,145,200,145);
  line(0,175,200,175);
  stroke(0);
  
}



TAB 2:

class Car {
  //properties
  color c;
  float x;
  float y;
  float speed;
  
  //constructor
  Car(color tempC, float tempX, float tempY, float tempSpeed) {
    c = tempC;
    x = tempX;
    y = tempY;
    speed = tempSpeed;
  }
  
  //behaviors
    void drive() {
    x+=speed;
    if(x>width) {
      x=0;
    }
  }
  
  void display() {
    rectMode(CENTER);
    fill(c);
    rect(x-4,y-7,20,6,0,3,0,0);
    rect(x,y,30,10,0,7,0,0);
    fill(0);
    ellipse(x-8,y+6,6,6);
    ellipse(x+8,y+6,6,6);
    rect(x-16,y+3.5,2,2);
    rect(x+16,y+3.5,2,2);
    fill(210,210,255);
    rect(x,y-5,5,5);
    rect(x-8,y-5,5,5);
  }
}









MULTI_CARS:

TAB 1:

Car myCar;
Car[] myCars;

void setup () {
  size(2000,200);
  myCar = new Car(color(0),0,190,2);
  myCars = new Car[100];
  for(int i=0; i<myCars.length; i++) {
    myCars[i] = new Car(color(random(255),random(255),random(255)),random(width),random(height),random(10));
  }
}

void draw() {
  background(60);
  for(int i=0; i<myCars.length; i++) {
    myCars[i].drive();
    myCars[i].display();
  stroke(0);
  }
}



TAB 2:

class Car {
  //properties
  color c;
  float x;
  float y;
  float speed;
  
  //constructor
  Car(color tempC, float tempX, float tempY, float tempSpeed) {
    c = tempC;
    x = tempX;
    y = tempY;
    speed = tempSpeed;
  }
  
  //behaviors
    void drive() {
    x+=speed;
    if(x>width) {
      x=0;
    }
  }
  
  void display() {
    rectMode(CENTER);
    fill(c);
    rect(x-4,y-7,20,6,0,3,0,0);
    rect(x,y,30,10,0,7,0,0);
    fill(0);
    ellipse(x-8,y+6,6,6);
    ellipse(x+8,y+6,6,6);
    rect(x-16,y+3.5,2,2);
    rect(x+16,y+3.5,2,2);
    fill(210,210,255);
    rect(x,y-5,5,5);
    rect(x-8,y-5,5,5);
  }
} 
